#BlueJ class context
comment0.target=GamePanel
comment0.text=\r\n\ Write\ a\ description\ of\ class\ GamePanel\ here.\r\n\r\n\ @author\ Greg\ Johnson,\ University\ of\ Connecticut\r\n\ @version\ 0.3\r\n
comment1.params=
comment1.target=GamePanel()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ GamePanel\r\n
comment10.params=
comment10.target=boolean\ checkEndGame()
comment10.text=\r\n\ This\ method\ checks\ to\ see\ if\ the\ game\ has\ ended.\r\n\ \r\n\ @return\ boolean\ This\ function\ returns\ whether\ the\ game\ is\ over\ or\ not.\r\n
comment11.params=e
comment11.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment2.params=
comment2.target=void\ tetriminoFactory()
comment3.params=aBrush
comment3.target=void\ paintComponent(java.awt.Graphics)
comment4.params=c\ r
comment4.target=boolean\ canMove(int,\ int)
comment4.text=\r\n\ This\ method\ takes\ two\ integers\ representing\ the\ column\ and\ row\ of\ a\ cell\ on\ the\ game\ board\ a\ component\ rectangle\ into\ which\ a\r\n\ tetrimino\ wishes\ to\ move.\ This\ can\ be\ prevented\ by\ either\ the\ cell\ being\ off\ of\ the\ game\ board\ (not\ a\ valid\ cell)\ or\ by\ the\r\n\ cell\ being\ occupied\ by\ another\ SmartRectangle.\r\n\ \r\n\ @param\ c\ The\ column\ of\ the\ cell\ in\ question\ on\ the\ game\ board.\r\n\ @param\ r\ The\ row\ of\ the\ cell\ in\ question\ on\ the\ game\ board.\r\n\ @return\ boolean\ This\ function\ returns\ whether\ the\ component\ rectangle\ can\ be\ moved\ into\ this\ cell.\r\n
comment5.params=c\ r
comment5.target=boolean\ isFree(int,\ int)
comment5.text=\r\n\ This\ method\ takes\ two\ integers\ representing\ the\ column\ and\ row\ of\ a\ cell\ on\ the\ game\ board\ a\ component\ rectangle\ into\ which\ a\r\n\ tetrimino\ wishes\ to\ move.\ This\ method\ returns\ a\ boolean\ indicating\ whether\ the\ cell\ on\ the\ game\ board\ is\ empty.\r\n\ \r\n\ @param\ c\ The\ column\ of\ the\ cell\ in\ question\ on\ the\ game\ board.\r\n\ @param\ r\ The\ row\ of\ the\ cell\ in\ question\ on\ the\ game\ board.\r\n\ @return\ boolean\ This\ function\ returns\ whether\ the\ cell\ on\ the\ game\ board\ is\ free.\r\n
comment6.params=c\ r
comment6.target=boolean\ isValid(int,\ int)
comment6.text=\r\n\ This\ method\ takes\ two\ integers\ representing\ the\ column\ and\ row\ of\ a\ cell\ on\ the\ game\ board\ a\ component\ rectangle\ into\ which\ a\r\n\ tetrimino\ wishes\ to\ move.\ This\ function\ checks\ to\ see\ if\ the\ cell\ at\ (c,\ r)\ is\ a\ valid\ location\ on\ the\ game\ board.\r\n\ \r\n\ @param\ c\ The\ column\ of\ the\ cell\ in\ question\ on\ the\ game\ board.\r\n\ @param\ r\ The\ row\ of\ the\ cell\ in\ question\ on\ the\ game\ board.\r\n\ @return\ boolean\ This\ function\ returns\ whether\ the\ location\ (c,\ r)\ is\ within\ the\ bounds\ of\ the\ game\ board.\r\n
comment7.params=r
comment7.target=void\ addToBoard(SmartRectangle)
comment7.text=\r\n\ This\ method\ takes\ two\ integers\ representing\ the\ column\ and\ row\ of\ a\ cell\ on\ the\ game\ board\ a\ component\ rectangle\ into\ which\ a\r\n\ tetrimino\ wishes\ to\ move.\ This\ can\ be\ prevented\ by\ either\ the\ cell\ being\ off\ of\ the\ game\ board\ (not\ a\ valid\ cell)\ or\ by\ the\r\n\ cell\ being\ occupied\ by\ another\ SmartRectangle.\r\n\ \r\n\ @param\ r\ The\ SmartRectangle\ to\ add\ to\ the\ game\ board.\r\n\ @return\ Nothing\r\n
comment8.params=row
comment8.target=void\ moveBlocksDown(int)
comment8.text=\r\n\ This\ method\ takes\ one\ integer\ representing\ the\ row\ of\ cells\ on\ the\ game\ board\ to\ move\ down\ on\ the\ screen\ after\ a\ full\ \r\n\ row\ of\ squares\ has\ been\ removed.\r\n\ \r\n\ @param\ row\ The\ row\ in\ question\ on\ the\ game\ board.\r\n\ @return\ Nothing\r\n
comment9.params=
comment9.target=void\ checkRows()
comment9.text=\r\n\ This\ method\ checks\ each\ row\ of\ the\ game\ board\ to\ see\ if\ it\ is\ full\ of\ rectangles\ and\ should\ be\ removed.\ It\ calls\r\n\ moveBlocksDown\ to\ adjust\ the\ game\ board\ after\ the\ removal\ of\ a\ row.\r\n\ \r\n\ @return\ Nothing\r\n
numComments=12
